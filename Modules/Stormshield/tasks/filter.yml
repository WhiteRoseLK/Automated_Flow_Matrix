---
# tasks file for sns-policy

- name: Initialize script variable
  ansible.builtin.set_fact:
    stormshield_script: ""

- name: Update filter slot configuration
  when: slotname != None
  block:
    - name: Set filter slot update script
      ansible.builtin.set_fact:
        stormshield_script: |
            {{ stormshield_script }}
            CONFIG SLOT UPDATE type=filter slot={{ slot }} name="{{ slotname }}" comment="{{ comment }}" global={{ '0' if scope == 'local' else '1' }}

- name: Flush Filter/NAT rules
  ansible.builtin.set_fact:
    stormshield_script: |
        {{ stormshield_script }}
        CONFIG FILTER RULE REMOVE index={{ slot }} type=filter position=all global={{ '0' if scope == 'local' else '1' }}
        CONFIG FILTER RULE REMOVE index={{ slot }} type=nat position=all global={{ '0' if scope == 'local' else '1' }}
  when: mode == "reset"

- name: Insert filter rules
  ansible.builtin.include_tasks: rule.yml
  vars:
    type: filter
  loop: "{{ filter }}"
  loop_control:
    loop_var: rule
  when: mode == "reset" or mode == "add"

- name: Insert separator rules
  ansible.builtin.include_tasks: separator.yml
  vars:
    type: filter
  loop: "{{ separator }}"
  loop_control:
    loop_var: rule
  when: mode == "reset" or mode == "add"

- name: Save rules
  ansible.builtin.set_fact:
    stormshield_script: "{{ stormshield_script }}CONFIG FILTER ACTIVATE\n"

- name: Activate slot
  ansible.builtin.set_fact:
    stormshield_script: "{{ stormshield_script }}CONFIG SLOT ACTIVATE type=filter slot={{ slot }} global={{ '0' if scope == 'local' else '1' }}\n"
  when: activate

- name: "Execute script"
  sns_command:
    appliance: "{{ hostvars[inventory_hostname].appliance }}"
    force_modify: "{{ hostvars[inventory_hostname].force_modify | default(false) }}"
    script: "{{ stormshield_script }}"
