- name: Connect to Stormshield Gateway
  hosts: all
  tasks:

    - name: Test SSH connection to Stormshield
      stormshield.sns.sns_command:
        appliance: "{{ hostvars[inventory_hostname].appliance }}"
        force_modify: "{{ hostvars[inventory_hostname].force_modify | default(false) }}"
        command: CONFIG NETWORK ROUTE SHOW
      register: sns_config

    - name: Get default route information
      stormshield.sns.sns_command:
        appliance: "{{ hostvars[inventory_hostname].appliance }}"
        force_modify: "{{ hostvars[inventory_hostname].force_modify | default(false) }}"
        command: CONFIG NETWORK DEFAULTROUTE SHOW
      register: sns_default_route

    - name: R√©cup√©ration des IP associ√©es aux gateways
      stormshield.sns.sns_command:
        appliance: "{{ hostvars[inventory_hostname].appliance }}"
        force_modify: "{{ hostvars[inventory_hostname].force_modify | default(false) }}"
        command: CONFIG OBJECT GET type=host name={{ item.Gateway }}
      loop: "{{ sns_config.data['StaticRoutes'] }}"
      when: item.Gateway is defined
      register: sns_gateway_ip

    - name: R√©cup√©ration de l'IP de la gateway par d√©faut
      stormshield.sns.sns_command:
        appliance: "{{ hostvars[inventory_hostname].appliance }}"
        force_modify: "{{ hostvars[inventory_hostname].force_modify | default(false) }}"
        command: CONFIG OBJECT GET type=host name={{ sns_default_route.data.DefaultRoute.IPv4 }}
      when: sns_default_route.data.DefaultRoute.IPv4 is defined and sns_default_route.data.DefaultRoute.IPv4 != ''
      register: sns_default_gateway_ip

    # üîÑ √âtape de transformation : remplacer les noms de gateway par leurs IPs
    - name: Initialiser la liste des routes modifi√©es
      ansible.builtin.set_fact:
        modified_static_routes: []

    - name: Traiter chaque route statique
      ansible.builtin.set_fact:
        modified_static_routes: "{{ modified_static_routes + [route_with_ip] }}"
      loop: "{{ sns_config.data['StaticRoutes'] }}"
      vars:
        # Pour chaque route, remplacer le Gateway par l'IP si elle existe
        gateway_ip_raw: >
          {{
            (sns_gateway_ip.results |
             selectattr('item.Gateway', 'defined') |
             selectattr('item.Gateway', 'equalto', item.Gateway) |
             map(attribute='data.Object.0.ip') |
             list)[0] if (item.Gateway is defined and sns_gateway_ip.results |
                         selectattr('item.Gateway', 'defined') |
                         selectattr('item.Gateway', 'equalto', item.Gateway) |
                         list | length > 0)
             else None
          }}
        gateway_ip: >
          {{
            (gateway_ip_raw | replace('\n', '') | replace('\r', '') | trim) if gateway_ip_raw
            else None
          }}
        route_with_ip: >
          {{
            item | combine({'Gateway': gateway_ip}) if (item.Gateway is defined and gateway_ip is not none)
            else item
          }}

    # üîÑ Cr√©er une structure simplifi√©e avec seulement Address et Gateway
    - name: Cr√©er la liste simplifi√©e des routes
      ansible.builtin.set_fact:
        simplified_routes: >
          {{
            ([{'Address': '0.0.0.0/0', 'Gateway': default_gateway}] if default_gateway else []) +
            (modified_static_routes | map('dict2items') |
            map('selectattr', 'key', 'in', ['Address', 'Gateway']) |
            map('items2dict') |
            list)
          }}
      vars:
        # R√©soudre l'IP de la route par d√©faut
        default_gateway_name: >
          {{
            sns_default_route.data.DefaultRoute.IPv4 if (sns_default_route.data is defined and 
                                                          sns_default_route.data.DefaultRoute is defined and 
                                                          sns_default_route.data.DefaultRoute.IPv4)
            else None
          }}
        default_gateway_raw: >
          {{
            sns_default_gateway_ip.data.Object.0.ip if (sns_default_gateway_ip is defined and 
                                                        sns_default_gateway_ip.data is defined and 
                                                        sns_default_gateway_ip.data.Object is defined and 
                                                        sns_default_gateway_ip.data.Object | length > 0)
            else None
          }}
        default_gateway: >
          {{
            (default_gateway_raw | replace('\n', '') | replace('\r', '') | trim) if default_gateway_raw
            else None
          }}

    - name: Sauvegarder la table de routage simplifi√©e localement
      delegate_to: localhost
      ansible.builtin.copy:
        content: "{{ (simplified_routes | to_nice_json).replace('\\n\"', '\"') }}"
        dest: "routing_table_{{ inventory_hostname }}.json"
        mode: '0644'
